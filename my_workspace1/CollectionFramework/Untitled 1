//  (version 1.8 : 52.0, no super bit)
// Signature: <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;
public abstract interface java.util.Map {
  
  // Method descriptor #1 ()I
  public abstract int size();
  
  // Method descriptor #4 ()Z
  public abstract boolean isEmpty();
  
  // Method descriptor #6 (Ljava/lang/Object;)Z
  public abstract boolean containsKey(java.lang.Object arg0);
  
  // Method descriptor #6 (Ljava/lang/Object;)Z
  public abstract boolean containsValue(java.lang.Object arg0);
  
  // Method descriptor #5 (Ljava/lang/Object;)Ljava/lang/Object;
  // Signature: (Ljava/lang/Object;)TV;
  public abstract java.lang.Object get(java.lang.Object arg0);
  
  // Method descriptor #90 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  // Signature: (TK;TV;)TV;
  public abstract java.lang.Object put(java.lang.Object arg0, java.lang.Object arg1);
  
  // Method descriptor #5 (Ljava/lang/Object;)Ljava/lang/Object;
  // Signature: (Ljava/lang/Object;)TV;
  public abstract java.lang.Object remove(java.lang.Object arg0);
  
  // Method descriptor #77 (Ljava/util/Map;)V
  // Signature: (Ljava/util/Map<+TK;+TV;>;)V
  public abstract void putAll(java.util.Map arg0);
  
  // Method descriptor #3 ()V
  public abstract void clear();
  
  // Method descriptor #79 ()Ljava/util/Set;
  // Signature: ()Ljava/util/Set<TK;>;
  public abstract java.util.Set keySet();
  
  // Method descriptor #74 ()Ljava/util/Collection;
  // Signature: ()Ljava/util/Collection<TV;>;
  public abstract java.util.Collection values();
  
  // Method descriptor #79 ()Ljava/util/Set;
  // Signature: ()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;
  public abstract java.util.Set entrySet();
  
  // Method descriptor #6 (Ljava/lang/Object;)Z
  public abstract boolean equals(java.lang.Object arg0);
  
  // Method descriptor #1 ()I
  public abstract int hashCode();
  
  // Method descriptor #90 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  // Signature: (Ljava/lang/Object;TV;)TV;
  // Stack: 2, Locals: 4
  public java.lang.Object getOrDefault(java.lang.Object arg0, java.lang.Object arg1);
     0  aload_0 [this]
     1  aload_1 [arg0]
     2  invokeinterface java.util.Map.get(java.lang.Object) : java.lang.Object [119] [nargs: 2]
     7  dup
     8  astore_3
     9  ifnonnull 22
    12  aload_0 [this]
    13  aload_1 [arg0]
    14  invokeinterface java.util.Map.containsKey(java.lang.Object) : boolean [117] [nargs: 2]
    19  ifeq 26
    22  aload_3
    23  goto 27
    26  aload_2 [arg1]
    27  areturn
    Stack map table: number of frames 3
        [pc: 22, append: {java.lang.Object}]
        [pc: 26, same]
        [pc: 27, same_locals_1_stack_item, stack: {java.lang.Object}]
  
  // Method descriptor #81 (Ljava/util/function/BiConsumer;)V
  // Signature: (Ljava/util/function/BiConsumer<-TK;-TV;>;)V
  // Stack: 3, Locals: 7
  public void forEach(java.util.function.BiConsumer arg0);
     0  aload_1 [arg0]
     1  invokestatic java.util.Objects.requireNonNull(java.lang.Object) : java.lang.Object [113]
     4  pop
     5  aload_0 [this]
     6  invokeinterface java.util.Map.entrySet() : java.util.Set [118] [nargs: 1]
    11  invokeinterface java.util.Set.iterator() : java.util.Iterator [125] [nargs: 1]
    16  astore_2
    17  aload_2
    18  invokeinterface java.util.Iterator.hasNext() : boolean [115] [nargs: 1]
    23  ifeq 80
    26  aload_2
    27  invokeinterface java.util.Iterator.next() : java.lang.Object [116] [nargs: 1]
    32  checkcast java.util.Map$Entry [65]
    35  astore_3
    36  aload_3
    37  invokeinterface java.util.Map$Entry.getKey() : java.lang.Object [122] [nargs: 1]
    42  astore 4
    44  aload_3
    45  invokeinterface java.util.Map$Entry.getValue() : java.lang.Object [123] [nargs: 1]
    50  astore 5
    52  goto 67
    55  astore 6
    57  new java.util.ConcurrentModificationException [62]
    60  dup
    61  aload 6
    63  invokespecial java.util.ConcurrentModificationException(java.lang.Throwable) [112]
    66  athrow
    67  aload_1 [arg0]
    68  aload 4
    70  aload 5
    72  invokeinterface java.util.function.BiConsumer.accept(java.lang.Object, java.lang.Object) : void [126] [nargs: 3]
    77  goto 17
    80  return
      Exception Table:
        [pc: 36, pc: 52] -> 55 when : java.lang.IllegalStateException
      Stack map table: number of frames 4
        [pc: 17, append: {java.util.Iterator}]
        [pc: 55, full, stack: {java.lang.IllegalStateException}, locals: {java.util.Map, java.util.function.BiConsumer, java.util.Iterator, java.util.Map$Entry}]
        [pc: 67, append: {java.lang.Object, java.lang.Object}]
        [pc: 80, full, stack: {}, locals: {java.util.Map, java.util.function.BiConsumer}]
  
  // Method descriptor #83 (Ljava/util/function/BiFunction;)V
  // Signature: (Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)V
  // Stack: 3, Locals: 7
  public void replaceAll(java.util.function.BiFunction arg0);
      0  aload_1 [arg0]
      1  invokestatic java.util.Objects.requireNonNull(java.lang.Object) : java.lang.Object [113]
      4  pop
      5  aload_0 [this]
      6  invokeinterface java.util.Map.entrySet() : java.util.Set [118] [nargs: 1]
     11  invokeinterface java.util.Set.iterator() : java.util.Iterator [125] [nargs: 1]
     16  astore_2
     17  aload_2
     18  invokeinterface java.util.Iterator.hasNext() : boolean [115] [nargs: 1]
     23  ifeq 106
     26  aload_2
     27  invokeinterface java.util.Iterator.next() : java.lang.Object [116] [nargs: 1]
     32  checkcast java.util.Map$Entry [65]
     35  astore_3
     36  aload_3
     37  invokeinterface java.util.Map$Entry.getKey() : java.lang.Object [122] [nargs: 1]
     42  astore 4
     44  aload_3
     45  invokeinterface java.util.Map$Entry.getValue() : java.lang.Object [123] [nargs: 1]
     50  astore 5
     52  goto 67
     55  astore 6
     57  new java.util.ConcurrentModificationException [62]
     60  dup
     61  aload 6
     63  invokespecial java.util.ConcurrentModificationException(java.lang.Throwable) [112]
     66  athrow
     67  aload_1 [arg0]
     68  aload 4
     70  aload 5
     72  invokeinterface java.util.function.BiFunction.apply(java.lang.Object, java.lang.Object) : java.lang.Object [127] [nargs: 3]
     77  astore 5
     79  aload_3
     80  aload 5
     82  invokeinterface java.util.Map$Entry.setValue(java.lang.Object) : java.lang.Object [124] [nargs: 2]
     87  pop
     88  goto 103
     91  astore 6
     93  new java.util.ConcurrentModificationException [62]
     96  dup
     97  aload 6
     99  invokespecial java.util.ConcurrentModificationException(java.lang.Throwable) [112]
    102  athrow
    103  goto 17
    106  return
      Exception Table:
        [pc: 36, pc: 52] -> 55 when : java.lang.IllegalStateException
        [pc: 79, pc: 88] -> 91 when : java.lang.IllegalStateException
      Stack map table: number of frames 6
        [pc: 17, append: {java.util.Iterator}]
        [pc: 55, full, stack: {java.lang.IllegalStateException}, locals: {java.util.Map, java.util.function.BiFunction, java.util.Iterator, java.util.Map$Entry}]
        [pc: 67, append: {java.lang.Object, java.lang.Object}]
        [pc: 91, same_locals_1_stack_item, stack: {java.lang.IllegalStateException}]
        [pc: 103, chop 3 local(s)]
        [pc: 106, chop 1 local(s)]
  
  // Method descriptor #90 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  // Signature: (TK;TV;)TV;
  // Stack: 3, Locals: 4
  public java.lang.Object putIfAbsent(java.lang.Object arg0, java.lang.Object arg1);
     0  aload_0 [this]
     1  aload_1 [arg0]
     2  invokeinterface java.util.Map.get(java.lang.Object) : java.lang.Object [119] [nargs: 2]
     7  astore_3
     8  aload_3
     9  ifnonnull 21
    12  aload_0 [this]
    13  aload_1 [arg0]
    14  aload_2 [arg1]
    15  invokeinterface java.util.Map.put(java.lang.Object, java.lang.Object) : java.lang.Object [121] [nargs: 3]
    20  astore_3
    21  aload_3
    22  areturn
    Stack map table: number of frames 1
        [pc: 21, append: {java.lang.Object}]
  
  // Method descriptor #88 (Ljava/lang/Object;Ljava/lang/Object;)Z
  // Stack: 2, Locals: 4
  public boolean remove(java.lang.Object arg0, java.lang.Object arg1);
     0  aload_0 [this]
     1  aload_1 [arg0]
     2  invokeinterface java.util.Map.get(java.lang.Object) : java.lang.Object [119] [nargs: 2]
     7  astore_3
     8  aload_3
     9  aload_2 [arg1]
    10  invokestatic java.util.Objects.equals(java.lang.Object, java.lang.Object) : boolean [114]
    13  ifeq 30
    16  aload_3
    17  ifnonnull 32
    20  aload_0 [this]
    21  aload_1 [arg0]
    22  invokeinterface java.util.Map.containsKey(java.lang.Object) : boolean [117] [nargs: 2]
    27  ifne 32
    30  iconst_0
    31  ireturn
    32  aload_0 [this]
    33  aload_1 [arg0]
    34  invokeinterface java.util.Map.remove(java.lang.Object) : java.lang.Object [120] [nargs: 2]
    39  pop
    40  iconst_1
    41  ireturn
    Stack map table: number of frames 2
        [pc: 30, append: {java.lang.Object}]
        [pc: 32, same]
  
  // Method descriptor #91 (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
  // Signature: (TK;TV;TV;)Z
  // Stack: 3, Locals: 5
  public boolean replace(java.lang.Object arg0, java.lang.Object arg1, java.lang.Object arg2);
     0  aload_0 [this]
     1  aload_1 [arg0]
     2  invokeinterface java.util.Map.get(java.lang.Object) : java.lang.Object [119] [nargs: 2]
     7  astore 4
     9  aload 4
    11  aload_2 [arg1]
    12  invokestatic java.util.Objects.equals(java.lang.Object, java.lang.Object) : boolean [114]
    15  ifeq 33
    18  aload 4
    20  ifnonnull 35
    23  aload_0 [this]
    24  aload_1 [arg0]
    25  invokeinterface java.util.Map.containsKey(java.lang.Object) : boolean [117] [nargs: 2]
    30  ifne 35
    33  iconst_0
    34  ireturn
    35  aload_0 [this]
    36  aload_1 [arg0]
    37  aload_3 [arg2]
    38  invokeinterface java.util.Map.put(java.lang.Object, java.lang.Object) : java.lang.Object [121] [nargs: 3]
    43  pop
    44  iconst_1
    45  ireturn
    Stack map table: number of frames 2
        [pc: 33, append: {java.lang.Object}]
        [pc: 35, same]
  
  // Method descriptor #90 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  // Signature: (TK;TV;)TV;
  // Stack: 3, Locals: 4
  public java.lang.Object replace(java.lang.Object arg0, java.lang.Object arg1);
     0  aload_0 [this]
     1  aload_1 [arg0]
     2  invokeinterface java.util.Map.get(java.lang.Object) : java.lang.Object [119] [nargs: 2]
     7  dup
     8  astore_3
     9  ifnonnull 22
    12  aload_0 [this]
    13  aload_1 [arg0]
    14  invokeinterface java.util.Map.containsKey(java.lang.Object) : boolean [117] [nargs: 2]
    19  ifeq 31
    22  aload_0 [this]
    23  aload_1 [arg0]
    24  aload_2 [arg1]
    25  invokeinterface java.util.Map.put(java.lang.Object, java.lang.Object) : java.lang.Object [121] [nargs: 3]
    30  astore_3
    31  aload_3
    32  areturn
    Stack map table: number of frames 2
        [pc: 22, append: {java.lang.Object}]
        [pc: 31, same]
  
  // Method descriptor #93 (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
  // Signature: (TK;Ljava/util/function/Function<-TK;+TV;>;)TV;
  // Stack: 3, Locals: 5
  public java.lang.Object computeIfAbsent(java.lang.Object arg0, java.util.function.Function arg1);
     0  aload_2 [arg1]
     1  invokestatic java.util.Objects.requireNonNull(java.lang.Object) : java.lang.Object [113]
     4  pop
     5  aload_0 [this]
     6  aload_1 [arg0]
     7  invokeinterface java.util.Map.get(java.lang.Object) : java.lang.Object [119] [nargs: 2]
    12  dup
    13  astore_3
    14  ifnonnull 43
    17  aload_2 [arg1]
    18  aload_1 [arg0]
    19  invokeinterface java.util.function.Function.apply(java.lang.Object) : java.lang.Object [128] [nargs: 2]
    24  dup
    25  astore 4
    27  ifnull 43
    30  aload_0 [this]
    31  aload_1 [arg0]
    32  aload 4
    34  invokeinterface java.util.Map.put(java.lang.Object, java.lang.Object) : java.lang.Object [121] [nargs: 3]
    39  pop
    40  aload 4
    42  areturn
    43  aload_3
    44  areturn
    Stack map table: number of frames 1
        [pc: 43, append: {java.lang.Object}]
  
  // Method descriptor #92 (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
  // Signature: (TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;
  // Stack: 3, Locals: 5
  public java.lang.Object computeIfPresent(java.lang.Object arg0, java.util.function.BiFunction arg1);
     0  aload_2 [arg1]
     1  invokestatic java.util.Objects.requireNonNull(java.lang.Object) : java.lang.Object [113]
     4  pop
     5  aload_0 [this]
     6  aload_1 [arg0]
     7  invokeinterface java.util.Map.get(java.lang.Object) : java.lang.Object [119] [nargs: 2]
    12  dup
    13  astore_3
    14  ifnull 55
    17  aload_2 [arg1]
    18  aload_1 [arg0]
    19  aload_3
    20  invokeinterface java.util.function.BiFunction.apply(java.lang.Object, java.lang.Object) : java.lang.Object [127] [nargs: 3]
    25  astore 4
    27  aload 4
    29  ifnull 45
    32  aload_0 [this]
    33  aload_1 [arg0]
    34  aload 4
    36  invokeinterface java.util.Map.put(java.lang.Object, java.lang.Object) : java.lang.Object [121] [nargs: 3]
    41  pop
    42  aload 4
    44  areturn
    45  aload_0 [this]
    46  aload_1 [arg0]
    47  invokeinterface java.util.Map.remove(java.lang.Object) : java.lang.Object [120] [nargs: 2]
    52  pop
    53  aconst_null
    54  areturn
    55  aconst_null
    56  areturn
    Stack map table: number of frames 2
        [pc: 45, append: {java.lang.Object, java.lang.Object}]
        [pc: 55, chop 1 local(s)]
  
  // Method descriptor #92 (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
  // Signature: (TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;
  // Stack: 3, Locals: 5
  public java.lang.Object compute(java.lang.Object arg0, java.util.function.BiFunction arg1);
     0  aload_2 [arg1]
     1  invokestatic java.util.Objects.requireNonNull(java.lang.Object) : java.lang.Object [113]
     4  pop
     5  aload_0 [this]
     6  aload_1 [arg0]
     7  invokeinterface java.util.Map.get(java.lang.Object) : java.lang.Object [119] [nargs: 2]
    12  astore_3
    13  aload_2 [arg1]
    14  aload_1 [arg0]
    15  aload_3
    16  invokeinterface java.util.function.BiFunction.apply(java.lang.Object, java.lang.Object) : java.lang.Object [127] [nargs: 3]
    21  astore 4
    23  aload 4
    25  ifnonnull 54
    28  aload_3
    29  ifnonnull 42
    32  aload_0 [this]
    33  aload_1 [arg0]
    34  invokeinterface java.util.Map.containsKey(java.lang.Object) : boolean [117] [nargs: 2]
    39  ifeq 52
    42  aload_0 [this]
    43  aload_1 [arg0]
    44  invokeinterface java.util.Map.remove(java.lang.Object) : java.lang.Object [120] [nargs: 2]
    49  pop
    50  aconst_null
    51  areturn
    52  aconst_null
    53  areturn
    54  aload_0 [this]
    55  aload_1 [arg0]
    56  aload 4
    58  invokeinterface java.util.Map.put(java.lang.Object, java.lang.Object) : java.lang.Object [121] [nargs: 3]
    63  pop
    64  aload 4
    66  areturn
    Stack map table: number of frames 3
        [pc: 42, append: {java.lang.Object, java.lang.Object}]
        [pc: 52, same]
        [pc: 54, same]
  
  // Method descriptor #94 (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
  // Signature: (TK;TV;Ljava/util/function/BiFunction<-TV;-TV;+TV;>;)TV;
  // Stack: 3, Locals: 6
  public java.lang.Object merge(java.lang.Object arg0, java.lang.Object arg1, java.util.function.BiFunction arg2);
     0  aload_3 [arg2]
     1  invokestatic java.util.Objects.requireNonNull(java.lang.Object) : java.lang.Object [113]
     4  pop
     5  aload_2 [arg1]
     6  invokestatic java.util.Objects.requireNonNull(java.lang.Object) : java.lang.Object [113]
     9  pop
    10  aload_0 [this]
    11  aload_1 [arg0]
    12  invokeinterface java.util.Map.get(java.lang.Object) : java.lang.Object [119] [nargs: 2]
    17  astore 4
    19  aload 4
    21  ifnonnull 28
    24  aload_2 [arg1]
    25  goto 37
    28  aload_3 [arg2]
    29  aload 4
    31  aload_2 [arg1]
    32  invokeinterface java.util.function.BiFunction.apply(java.lang.Object, java.lang.Object) : java.lang.Object [127] [nargs: 3]
    37  astore 5
    39  aload 5
    41  ifnonnull 55
    44  aload_0 [this]
    45  aload_1 [arg0]
    46  invokeinterface java.util.Map.remove(java.lang.Object) : java.lang.Object [120] [nargs: 2]
    51  pop
    52  goto 65
    55  aload_0 [this]
    56  aload_1 [arg0]
    57  aload 5
    59  invokeinterface java.util.Map.put(java.lang.Object, java.lang.Object) : java.lang.Object [121] [nargs: 3]
    64  pop
    65  aload 5
    67  areturn
    Stack map table: number of frames 4
        [pc: 28, append: {java.lang.Object}]
        [pc: 37, same_locals_1_stack_item, stack: {java.lang.Object}]
        [pc: 55, append: {java.lang.Object}]
        [pc: 65, same]

  Inner classes:
    [inner class info: #65 java/util/Map$Entry, outer class info: #64 java/util/Map
     inner name: #13 Entry, accessflags: 1545 public abstract static]
}